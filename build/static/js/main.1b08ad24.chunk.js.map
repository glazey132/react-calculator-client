{"version":3,"sources":["Display.js","Keyboard.js","calculatorConstants.js","Calculator.js","Calculations.js","App.js","registerServiceWorker.js","index.js"],"names":["inputDisplayStyle","textAlign","marginTop","width","height","fontSize","zIndex","lineHeight","direction","Display","props","react_default","a","createElement","type","name","onChange","handleDisplayChange","value","displayValue","style","keyboardStyle","display","flexWrap","border","keyStyleObj","key","margin","backgroundColor","Keyboard","numKeys","map","onClick","e","handleKeyPress","target","calculatorConstants","nums","operators","fns","calculatorOrder","Calculator","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","inputDigit","state","waitingForOperand","setState","prev","inputDecimal","indexOf","inputOperator","newOperator","_this$state","operator","nextValue","parseFloat","currentValue","computed","+","prevValue","newValue","-","*","/","=","socket","emit","concat","String","clearDisplay","_ref","regenerator_default","mark","_callee","wrap","_context","next","calcularConstants","includes","stop","_x","apply","arguments","calculatorSectionStyle","src_Display","src_Keyboard","Component","minWidth","maxWidth","paddingRight","minHeight","marginLeft","paddingLeft","paddingTop","boxShadow","Calculations","Calculations_classCallCheck","console","log","Calculations_possibleConstructorReturn","Calculations_getPrototypeOf","calulationsSectionStyle","calculations","calc","calculationRowStyle","timestamp","computation","flex","flexDirection","overflow","App","App_classCallCheck","App_possibleConstructorReturn","App_getPrototypeOf","io","connect","transports","on","calcs","className","src_Calculator","src_Calculations","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.1b08ad24.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Display(props) {\n  return (\n    <input\n      type=\"text\"\n      name=\"displayInput\"\n      onChange={props.handleDisplayChange}\n      value={props.displayValue}\n      style={inputDisplayStyle}\n    />\n  );\n}\n\nconst inputDisplayStyle = {\n  textAlign: 'right', \n  marginTop: '.2rem', \n  width: '99%', \n  height: '3rem', \n  fontSize: 'x-large',\n  zIndex: '10',\n  lineHeight: '2',\n  direction: 'rtl' \n}\n\nexport default Display;\n","import React, { Component } from 'react';\n\nfunction Keyboard(props) {\n  return (\n      <div style={keyboardStyle}>\n        {props.numKeys.map(key => (\n          <button\n            key={key}\n            value={key}\n            style={keyStyleObj(key)}\n            onClick={e => props.handleKeyPress(e.target.value)}\n          >\n            {key}\n          </button>\n        ))} \n      </div>\n  );\n}\n\nconst keyboardStyle = {\n  display: 'flex',\n  flexWrap: 'wrap',\n  border: '10px solid #232425'\n}\n\n/**\n * calculates a buttons color\n * @param {*} key - button key\n */\nconst keyStyleObj = function(key) {\n  let backgroundColor;\n  if (key === '+' || key === '-' || key === '*' || key === '/') {\n    backgroundColor = 'darkOrange';\n  } else if (key === '=') {\n    backgroundColor = 'springGreen'\n  } else if (key === 'C') {\n    backgroundColor = 'tomato'\n  }\n  else {\n    backgroundColor = 'dodgerBlue'\n  }\n  return {\n    width: '6rem',\n    height: '4rem',\n    margin: '.11rem',\n    backgroundColor: backgroundColor\n  }\n};\n\nexport default Keyboard;\n","\nconst calculatorConstants = {\n    nums: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.'],\n    operators: ['+', '-', '*', '/'],\n    fns: ['C', '='],\n    calculatorOrder: ['1', '2', '3', '+', '4', '5', '6', '-', '7', '8', '9', '*', '0', '.', 'C', '/', '='],\n};\n\nexport default calculatorConstants;","import React, { Component } from 'react';\nimport Display from './Display';\nimport Keyboard from './Keyboard';\n\nimport calcularConstants from './calculatorConstants';\nimport _ from 'lodash';\n\n\nclass Calculator extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      displayValue: '0',\n      waitingForOperand: false,\n      operator: null,\n      value: null\n    };\n  }\n\n  inputDigit = e => {\n    const { waitingForOperand } = this.state;\n    if (waitingForOperand) {\n      this.setState({\n        displayValue: e,\n        waitingForOperand: false\n      });\n    } else {\n      this.setState(prev => ({\n        displayValue: prev.displayValue === '0' ? e : prev.displayValue + e\n      }));\n    }\n  };\n\n  inputDecimal = () => {\n    const { waitingForOperand } = this.state;\n    if (waitingForOperand) {\n      this.setState({\n        displayValue: '.',\n        waitingForOperand: false\n      });\n    }\n    this.setState(prev => ({\n      displayValue:\n        prev.displayValue.indexOf('.') === -1\n          ? prev.displayValue + '.'\n          : prev.displayValue\n    }));\n  };\n\n  inputOperator = newOperator => {\n    const operations = {\n      '+': (prevValue, newValue) => prevValue + newValue,\n      '-': (prevValue, newValue) => prevValue - newValue,\n      '*': (prevValue, newValue) => prevValue * newValue,\n      '/': (prevValue, newValue) => prevValue / newValue,\n      '=': (prevValue, newValue) => newValue\n    };\n\n    const { displayValue, operator, value, waitingForOperand } = this.state;\n\n    const nextValue = parseFloat(displayValue);\n\n    if (value === null) {\n      \n      this.setState({\n        value: nextValue\n      });\n      \n    } else if (operator && newOperator === '=' && !waitingForOperand) {\n      const currentValue = value || 0;\n      const computed = operations[operator](currentValue, nextValue);\n\n      this.props.socket.emit(\n        'computation',\n        `${currentValue}${operator}${nextValue}=${computed}`\n      );\n\n      this.setState({\n        value: computed,\n        displayValue: String(computed),\n        waitingForOperand: false\n      });\n    }\n\n    this.setState({\n      waitingForOperand: true,\n      operator: newOperator\n    });\n    \n  };\n\n  clearDisplay = () => {\n    this.setState({\n      displayValue: '0',\n      value: null,\n      operator: null,\n      waitingForOperand: false\n    });\n  };\n\n  handleKeyPress = async e => {\n    const { displayValue } = this.state;\n    if (calcularConstants.operators.includes(e)) {\n      this.inputOperator(e);\n    } else if (calcularConstants.fns.includes(e)) {\n\n      if (e === 'C') {\n        this.clearDisplay();\n      } else {\n        this.inputOperator(e);\n      }\n      \n    } else if (calcularConstants.nums.includes(e)) {\n      if (e === '.') {\n\n        if (displayValue.indexOf('.') === -1) {\n          this.inputDecimal();\n        }\n\n      } else {\n\n        // clear the display if user selects a digit directly after running a calculation\n        if (this.state.operator === '=') {\n          this.clearDisplay();\n        }\n        this.inputDigit(e);\n      }\n    }\n\n  };\n\n  render() {\n    const { displayValue } = this.state;\n    return (\n      <section\n        style={calculatorSectionStyle}\n      >\n        <Display displayValue={displayValue} />\n        <Keyboard\n          handleKeyPress={this.handleKeyPress}\n          numKeys={calcularConstants.calculatorOrder}\n        />\n      </section>\n    );\n  }\n}\n\nconst calculatorSectionStyle = {\n  backgroundColor: '#232425',\n  border: '1px solid darkgrey',\n  minWidth: '500px',\n  maxWidth: '500px',\n  paddingRight: '5px',\n  height: '75%',\n  minHeight: '400px',\n  marginLeft: '1rem',\n  paddingLeft: '3px',\n  paddingTop: '5px',\n  boxShadow: 'inset 3px 3px black',\n}\n\nexport default Calculator;","import React, { Component } from 'react';\n\nclass Calculations extends Component {\n  constructor(props) {\n    console.log(\"TCL: Calculations -> constructor -> props\", props)\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <section\n        style={calulationsSectionStyle}\n      >\n        <h5>10 most recent Calculations: </h5>{' '}\n        <ol>\n          {this.props.calculations.map(calc => (\n            <li style={calculationRowStyle} key={calc.timestamp}>\n              {calc.computation} - {calc.timestamp}\n            </li>\n          ))}\n        </ol>\n      </section>\n    );\n  }\n}\n\nconst calculationRowStyle = {\n  flex: '1' \n}\n\nconst calulationsSectionStyle = {\n  backgroundColor: 'aliceblue',\n  border: '1px solid darkgrey',\n  width: '864px',\n  height: '100%',\n  display: 'flex',\n  flexDirection: 'column',\n  overflow: 'scroll',\n  marginLeft: '1em'\n}\n\nexport default Calculations;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Calculator from './Calculator';\nimport Calculations from './Calculations';\nimport io from 'socket.io-client';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    const socket = io.connect(\n      'https://react-calc-12345.herokuapp.com/',\n      { transports: ['websocket'] }\n    );\n    console.log(\"TCL: App -> constructor -> socket\", socket)\n    this.state = {\n      socket,\n      calculations: []\n    };\n\n    this.state.socket.on('calculationsUpdate', calcs => {\n    console.log(\"TCL: App -> constructor -> calcs\", calcs)\n      this.setState({\n        calculations: calcs\n      });\n    });\n\n    this.state.socket.on('moung', calcs => {\n      console.log(\"TCL: App -> constructor -> mount\", calcs)\n    });\n\n  }\n\n  componentDidMount() {\n    this.state.socket.emit('mount');\n  }\n  render() {\n    return (\n      <div className=\"App\">\n          <Calculator socket={this.state.socket} />\n          <Calculations\n            socket={this.state.socket}\n            calculations={this.state.calculations}\n          />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}